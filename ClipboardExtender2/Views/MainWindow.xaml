<Window
        x:Name="mainWindow"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:i="http://schemas.microsoft.com/expression/2010/interactivity"
        xmlns:ei="http://schemas.microsoft.com/expression/2010/interactions"
        xmlns:l="http://schemas.livet-mvvm.net/2011/wpf"
        xmlns:v="clr-namespace:ClipboardExtender2.Views"
        xmlns:vm="clr-namespace:ClipboardExtender2.ViewModels"
        xmlns:Properties="clr-namespace:ClipboardExtender2.Properties"
        x:Class="ClipboardExtender2.Views.MainWindow"
        Title="ClipboardExtender2" Height="350" Width="525"
        Topmost="True" WindowStyle="ToolWindow" FocusManager.FocusedElement="{Binding ElementName=mainListBox}">

    <Window.Resources>
        <v:TextFirstLineConverter x:Key="textFirstLineConverter"/>
        <v:TextLineCountConverter x:Key="textLineCountConverter"/>
    </Window.Resources>

    <Window.DataContext>
        <vm:MainWindowViewModel/>
    </Window.DataContext>

    <i:Interaction.Behaviors>
        <l:WindowCloseCancelBehavior CanClose="{Binding CanClose}" CloseCanceledCallbackCommand="{Binding MinimizeWindowCommand}"/>
    </i:Interaction.Behaviors>

    <i:Interaction.Triggers>

        <!--Viewに特別な要件が存在しない限りは、トリガーやアクションの自作にこだわらず積極的にコードビハインドを使いましょう -->
        <!--Viewのコードビハインドは、基本的にView内で完結するロジックとViewModelからのイベントの受信(専用リスナを使用する)に限るとトラブルが少なくなります -->
        <!--Livet1.1からはコードビハインドでViewModelのイベントを受信するためのWeakEventLisnterサポートが追加されています -->

        <!--WindowのContentRenderedイベントのタイミングでViewModelのInitializeメソッドが呼ばれます-->
        <i:EventTrigger EventName="ContentRendered">
            <l:LivetCallMethodAction MethodTarget="{Binding}" MethodName="Initialize"/>
        </i:EventTrigger>

        <!--Windowが閉じたタイミングでViewModelのDisposeメソッドが呼ばれます-->
        <i:EventTrigger EventName="Closed">
            <l:DataContextDisposeAction/>
        </i:EventTrigger>

        <!--WindowのCloseキャンセル処理に対応する場合は、WindowCloseCancelBehaviorの使用を検討してください-->

        <l:InteractionMessageTrigger MessageKey="normal" Messenger="{Binding Messenger}">
            <l:WindowInteractionMessageAction/>
        </l:InteractionMessageTrigger>

        <l:InteractionMessageTrigger MessageKey="active" Messenger="{Binding Messenger}">
            <l:WindowInteractionMessageAction/>
        </l:InteractionMessageTrigger>

        <l:InteractionMessageTrigger MessageKey="minimize" Messenger="{Binding Messenger}">
            <l:WindowInteractionMessageAction/>
        </l:InteractionMessageTrigger>

        <l:InteractionMessageTrigger MessageKey="close" Messenger="{Binding Messenger}">
            <l:WindowInteractionMessageAction/>
        </l:InteractionMessageTrigger>

        <l:InteractionMessageTrigger MessageKey="extensionLoaded" Messenger="{Binding Messenger}">
            <l:LivetCallMethodAction MethodTarget="{Binding ElementName=mainWindow}" MethodName="ExtensionLoaded"/>
        </l:InteractionMessageTrigger>
    </i:Interaction.Triggers>

    <Window.InputBindings>
        <KeyBinding Key="Escape" Command="{Binding MinimizeWindowCommand}"/>
    </Window.InputBindings>

    <Grid>
        <Grid.RowDefinitions>
            <RowDefinition Height="Auto"/><!--メインメニュー-->
            <RowDefinition Height="*"/><!--検索、メインリスト-->
            <RowDefinition Height="Auto"/><!--ステータスバー-->
        </Grid.RowDefinitions>

        <Menu Grid.Row="0" IsMainMenu="True">
            <MenuItem Header="{Binding MainMenu_File, Mode=OneWay, Source={StaticResource resources}}">
                <Separator/>
                <MenuItem Header="{Binding MainMenu_File_Exit, Mode=OneWay, Source={StaticResource resources}}" Command="{Binding ApplicationExitCommand}"/>
            </MenuItem>
            <MenuItem Header="{Binding MainMenu_Edit, Mode=OneWay, Source={StaticResource resources}}"/>
            <MenuItem Header="{Binding MainMenu_View, Mode=OneWay, Source={StaticResource resources}}"/>
            <MenuItem Header="{Binding MainMenu_Tool, Mode=OneWay, Source={StaticResource resources}}"/>
            <MenuItem Header="{Binding MainMenu_Help, Mode=OneWay, Source={StaticResource resources}}"/>
        </Menu>

        <Grid Grid.Row="1" KeyboardNavigation.TabNavigation="Cycle">
            <Grid.RowDefinitions>
                <RowDefinition Height="Auto"/><!--検索-->
                <RowDefinition Height="*"/><!--メインリスト-->
            </Grid.RowDefinitions>
            
            <TextBox Grid.Row="0" Text="hogehogehogehoge"/>

            <ListBox x:Name="mainListBox" Grid.Row="1"
                     ItemsSource="{Binding ClipbordHistory}"
			         ScrollViewer.HorizontalScrollBarVisibility="Disabled"
			         HorizontalContentAlignment="Stretch"
                     IsSynchronizedWithCurrentItem="True" SelectionMode="Extended"
                     SelectedItem="{Binding SelectedHistoryItem}"
                     SelectionChanged="mainListBox_SelectionChanged">
                <ListBox.InputBindings>
                    <KeyBinding Key="Enter" Command="{Binding PasteCommand}"/>
                    <MouseBinding MouseAction="LeftDoubleClick" Command="{Binding PasteCommand}"/>
                </ListBox.InputBindings>
                <ListBox.ItemTemplate>
                    <DataTemplate>
                        <Grid>
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition Width="*"/>
                                <ColumnDefinition Width="Auto"/>
                            </Grid.ColumnDefinitions>

                            <TextBlock Grid.Column="0"
							    Text="{Binding Converter={StaticResource textFirstLineConverter}}"
							    TextTrimming="CharacterEllipsis"/>

                            <TextBlock Grid.Column="1"
							    Text="{Binding Converter={StaticResource textLineCountConverter}, StringFormat=(\{0\}行)}"/>
                        </Grid>
                    </DataTemplate>
                </ListBox.ItemTemplate>
                <ListBox.ContextMenu>
                    <ContextMenu x:Name="extensionContextMenu"/>
                </ListBox.ContextMenu>
            </ListBox>
        </Grid>
        <StatusBar Grid.Row="2">
            <ProgressBar Width="100" Height="15" Maximum="100" Value="100"/>
            <TextBlock x:Name="statusTextBlock" Text="hogehogehoge"/>
        </StatusBar>
    </Grid>
</Window>
